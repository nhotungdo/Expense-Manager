@page
@model MoneyTracker.Pages.DashboardModel
@{
    ViewData["Title"] = "Dashboard - MoneyTracker";
}

@section Styles {
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />
}

<div class="container-fluid px-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <div class="me-3">
                        <img id="userAvatar" src="" alt="Avatar" class="rounded-circle" width="50" height="50"
                            style="display: none;">
                        <div id="userAvatarPlaceholder"
                            class="rounded-circle bg-primary text-white d-flex align-items-center justify-content-center"
                            style="width: 50px; height: 50px; font-weight: bold;">
                            U
                        </div>
                    </div>
                    <div>
                        <h1 class="h3 mb-1 text-gradient">
                            <i class="fas fa-tachometer-alt me-2"></i>Chào <span id="userGreeting">bạn</span>!
                        </h1>
                        <p class="text-muted mb-0">Tổng quan tài chính cá nhân của bạn</p>
                    </div>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary btn-sm" onclick="refreshDashboard()">
                        <i class="fas fa-sync-alt me-1"></i> Làm mới
                    </button>
                    <button class="btn btn-primary btn-sm" onclick="showAddTransactionModal()">
                        <i class="fas fa-plus me-1"></i> Thêm giao dịch
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Financial Overview Cards -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card dashboard-card balance-card financial-overview-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-2">
                                <i class="fas fa-wallet me-1"></i>Số dư hiện tại
                            </h6>
                            <h3 class="mb-0 fw-bold" id="currentBalance">0 ₫</h3>
                            <small class="text-white-50">Tổng tài sản</small>
                        </div>
                        <div class="text-end">
                            <div class="bg-white bg-opacity-20 rounded-circle p-3">
                                <i class="fas fa-wallet fa-2x text-white"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card dashboard-card income-card financial-overview-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-2">
                                <i class="fas fa-arrow-up me-1"></i>Thu nhập tháng này
                            </h6>
                            <h3 class="mb-0 fw-bold" id="monthlyIncome">0 ₫</h3>
                            <small class="text-white-50">Tổng thu nhập</small>
                        </div>
                        <div class="text-end">
                            <div class="bg-white bg-opacity-20 rounded-circle p-3">
                                <i class="fas fa-arrow-up fa-2x text-white"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card dashboard-card expense-card financial-overview-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-2">
                                <i class="fas fa-arrow-down me-1"></i>Chi tiêu tháng này
                            </h6>
                            <h3 class="mb-0 fw-bold" id="monthlyExpenses">0 ₫</h3>
                            <small class="text-white-50">Tổng chi tiêu</small>
                        </div>
                        <div class="text-end">
                            <div class="bg-white bg-opacity-20 rounded-circle p-3">
                                <i class="fas fa-arrow-down fa-2x text-white"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="card dashboard-card ratio-card financial-overview-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-white-50 mb-2">
                                <i class="fas fa-percentage me-1"></i>Tỷ lệ chi tiêu
                            </h6>
                            <h3 class="mb-0 fw-bold" id="expenseRatio">0%</h3>
                            <small class="text-white-50">So với thu nhập</small>
                        </div>
                        <div class="text-end">
                            <div class="bg-white bg-opacity-20 rounded-circle p-3">
                                <i class="fas fa-percentage fa-2x text-white"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row mb-4">
        <!-- Expenses by Category Pie Chart -->
        <div class="col-lg-6 mb-4">
            <div class="card dashboard-card shadow-soft">
                <div class="card-header bg-white border-0 py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0 text-dark">
                            <i class="fas fa-chart-pie me-2 text-primary"></i>Chi tiêu theo danh mục
                        </h5>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button"
                                data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" onclick="exportChart('pie')">Xuất biểu đồ</a></li>
                                <li><a class="dropdown-item" href="#" onclick="refreshChart('pie')">Làm mới</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div class="chart-container">
                        <canvas id="expensesPieChart"></canvas>
                    </div>
                    <div id="pieChartLegend" class="mt-3 text-center"></div>
                </div>
            </div>
        </div>

        <!-- Monthly Trends Line Chart -->
        <div class="col-lg-6 mb-4">
            <div class="card dashboard-card shadow-soft">
                <div class="card-header bg-white border-0 py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0 text-dark">
                            <i class="fas fa-chart-line me-2 text-success"></i>Xu hướng thu chi 6 tháng
                        </h5>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button"
                                data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" onclick="exportChart('line')">Xuất biểu đồ</a>
                                </li>
                                <li><a class="dropdown-item" href="#" onclick="refreshChart('line')">Làm mới</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div class="chart-container">
                        <canvas id="monthlyTrendsChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Transactions and AI Suggestions -->
    <div class="row mb-4">
        <!-- Recent Transactions -->
        <div class="col-lg-8 mb-4">
            <div class="card dashboard-card shadow-soft">
                <div class="card-header bg-white border-0 py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0 text-dark">
                            <i class="fas fa-history me-2 text-info"></i>Giao dịch gần nhất
                        </h5>
                        <div class="btn-group" role="group">
                            <button class="btn btn-sm btn-outline-primary" onclick="loadRecentTransactions()"
                                title="Làm mới">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                            <a href="/Expenses" class="btn btn-sm btn-primary">
                                <i class="fas fa-external-link-alt me-1"></i>Xem tất cả
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="border-0 py-3 px-4">
                                        <i class="fas fa-tag me-1"></i>Loại
                                    </th>
                                    <th class="border-0 py-3 px-4">
                                        <i class="fas fa-money-bill me-1"></i>Số tiền
                                    </th>
                                    <th class="border-0 py-3 px-4">
                                        <i class="fas fa-folder me-1"></i>Danh mục
                                    </th>
                                    <th class="border-0 py-3 px-4">
                                        <i class="fas fa-calendar me-1"></i>Ngày
                                    </th>
                                    <th class="border-0 py-3 px-4">
                                        <i class="fas fa-sticky-note me-1"></i>Ghi chú
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="recentTransactionsTable">
                                <tr>
                                    <td colspan="5" class="text-center py-5 text-muted">
                                        <i class="fas fa-spinner fa-spin me-2"></i>Đang tải dữ liệu...
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- AI Suggestions -->
        <div class="col-lg-4 mb-4">
            <div class="card dashboard-card shadow-soft">
                <div class="card-header bg-white border-0 py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0 text-dark">
                            <i class="fas fa-robot me-2 text-warning"></i>Gợi ý AI
                        </h5>
                        <button class="btn btn-sm btn-outline-primary" onclick="generateAISuggestion()"
                            title="Tạo gợi ý mới">
                            <i class="fas fa-magic"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div id="aiSuggestionsList">
                        <div class="text-center py-4 text-muted">
                            <i class="fas fa-spinner fa-spin me-2"></i>Đang tải gợi ý...
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row">
        <div class="col-12">
            <div class="card dashboard-card shadow-soft">
                <div class="card-header bg-white border-0 py-3">
                    <h5 class="card-title mb-0 text-dark">
                        <i class="fas fa-bolt me-2 text-primary"></i>Thao tác nhanh
                    </h5>
                </div>
                <div class="card-body p-4">
                    <div class="row g-3">
                        <div class="col-lg-3 col-md-6">
                            <button class="btn quick-action-btn w-100 h-100 border-danger text-danger"
                                onclick="showAddExpenseModal()">
                                <div class="d-flex flex-column align-items-center justify-content-center h-100">
                                    <i class="fas fa-minus-circle fa-3x mb-3"></i>
                                    <h6 class="mb-2 fw-bold">Thêm chi tiêu</h6>
                                    <small class="text-muted">Ghi chép khoản chi</small>
                                </div>
                            </button>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <button class="btn quick-action-btn w-100 h-100 border-success text-success"
                                onclick="showAddIncomeModal()">
                                <div class="d-flex flex-column align-items-center justify-content-center h-100">
                                    <i class="fas fa-plus-circle fa-3x mb-3"></i>
                                    <h6 class="mb-2 fw-bold">Thêm thu nhập</h6>
                                    <small class="text-muted">Ghi chép khoản thu</small>
                                </div>
                            </button>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <a href="/Categories"
                                class="btn quick-action-btn w-100 h-100 border-primary text-primary text-decoration-none"
                                onclick="return true;">
                                <div class="d-flex flex-column align-items-center justify-content-center h-100">
                                    <i class="fas fa-tags fa-3x mb-3"></i>
                                    <h6 class="mb-2 fw-bold">Quản lý danh mục</h6>
                                    <small class="text-muted">Tùy chỉnh phân loại</small>
                                </div>
                            </a>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <a href="/Profile"
                                class="btn quick-action-btn w-100 h-100 border-secondary text-secondary text-decoration-none"
                                onclick="return true;">
                                <div class="d-flex flex-column align-items-center justify-content-center h-100">
                                    <i class="fas fa-user-cog fa-3x mb-3"></i>
                                    <h6 class="mb-2 fw-bold">Cài đặt tài khoản</h6>
                                    <small class="text-muted">Thông tin cá nhân</small>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Transaction Modal -->
<div class="modal fade" id="addTransactionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm giao dịch</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <ul class="nav nav-tabs" id="transactionTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="expense-tab" data-bs-toggle="tab" data-bs-target="#expense"
                            type="button" role="tab">
                            <i class="fas fa-minus-circle text-danger me-2"></i>Chi tiêu
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="income-tab" data-bs-toggle="tab" data-bs-target="#income"
                            type="button" role="tab">
                            <i class="fas fa-plus-circle text-success me-2"></i>Thu nhập
                        </button>
                    </li>
                </ul>
                <div class="tab-content mt-3" id="transactionTabContent">
                    <div class="tab-pane fade show active" id="expense" role="tabpanel">
                        <form id="addExpenseForm">
                            <div class="mb-3">
                                <label class="form-label">Số tiền</label>
                                <input type="number" class="form-control" id="expenseAmount" step="0.01" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Danh mục</label>
                                <select class="form-control" id="expenseCategory" required>
                                    <option value="">Chọn danh mục</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Ngày</label>
                                <input type="date" class="form-control" id="expenseDate" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Ghi chú</label>
                                <textarea class="form-control" id="expenseNote" rows="3"></textarea>
                            </div>
                        </form>
                    </div>
                    <div class="tab-pane fade" id="income" role="tabpanel">
                        <form id="addIncomeForm">
                            <div class="mb-3">
                                <label class="form-label">Số tiền</label>
                                <input type="number" class="form-control" id="incomeAmount" step="0.01" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Danh mục</label>
                                <select class="form-control" id="incomeCategory" required>
                                    <option value="">Chọn danh mục</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Ngày</label>
                                <input type="date" class="form-control" id="incomeDate" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Ghi chú</label>
                                <textarea class="form-control" id="incomeNote" rows="3"></textarea>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="saveTransaction()">Lưu</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let dashboardData = {};
        let expensesPieChart = null;
        let monthlyTrendsChart = null;


        async function loadDashboardData() {
            try {
                const response = await fetch('/api/dashboard', {
                    headers: {
                        'Authorization': 'Bearer ' + getToken()
                    }
                });

                if (response.ok) {
                    dashboardData = await response.json();
                    updateDashboardUI();
                    createCharts();
                    loadRecentTransactions();
                    loadAISuggestions();
                } else if (response.status === 401) {
                    window.location.href = '/Login';
                } else {
                    alert('Có lỗi xảy ra khi tải dữ liệu dashboard');
                }
            } catch (error) {
                console.error('Error loading dashboard data:', error);
                alert('Có lỗi xảy ra khi tải dữ liệu dashboard');
            }
        }

        function updateDashboardUI() {
            // Update financial overview cards
            document.getElementById('currentBalance').textContent = formatCurrency(dashboardData.netWorth || 0);
            document.getElementById('monthlyIncome').textContent = formatCurrency(dashboardData.monthlyIncome || 0);
            document.getElementById('monthlyExpenses').textContent = formatCurrency(dashboardData.monthlyExpenses || 0);

            const expenseRatio = dashboardData.monthlyIncome > 0
                ? ((dashboardData.monthlyExpenses / dashboardData.monthlyIncome) * 100).toFixed(1)
                : 0;
            document.getElementById('expenseRatio').textContent = expenseRatio + '%';
        }

        function createCharts() {
            // Expenses Pie Chart
            const expensesCtx = document.getElementById('expensesPieChart').getContext('2d');
            if (expensesPieChart) {
                expensesPieChart.destroy();
            }

            const expensesData = dashboardData.expensesByCategory || [];
            expensesPieChart = new Chart(expensesCtx, {
                type: 'pie',
                data: {
                    labels: expensesData.map(item => item.category),
                    datasets: [{
                        data: expensesData.map(item => item.amount),
                        backgroundColor: [
                            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',
                            '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

            // Monthly Trends Line Chart
            const trendsCtx = document.getElementById('monthlyTrendsChart').getContext('2d');
            if (monthlyTrendsChart) {
                monthlyTrendsChart.destroy();
            }

            const trendsData = dashboardData.monthlyTrends || [];
            monthlyTrendsChart = new Chart(trendsCtx, {
                type: 'line',
                data: {
                    labels: trendsData.map(item => item.month),
                    datasets: [{
                        label: 'Thu nhập',
                        data: trendsData.map(item => item.income),
                        borderColor: '#28a745',
                        backgroundColor: 'rgba(40, 167, 69, 0.1)',
                        tension: 0.4
                    }, {
                        label: 'Chi tiêu',
                        data: trendsData.map(item => item.expenses),
                        borderColor: '#dc3545',
                        backgroundColor: 'rgba(220, 53, 69, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        async function loadRecentTransactions() {
            const transactions = dashboardData.recentTransactions || [];
            const tbody = document.getElementById('recentTransactionsTable');
            tbody.innerHTML = '';

            if (transactions.length === 0) {
                tbody.innerHTML = `
                            <tr>
                                <td colspan="5" class="text-center py-5 text-muted">
                                    <i class="fas fa-inbox fa-2x mb-3 d-block"></i>
                                    <div>Chưa có giao dịch nào</div>
                                    <small>Hãy thêm giao dịch đầu tiên của bạn</small>
                                </td>
                            </tr>
                        `;
                return;
            }

            transactions.forEach(transaction => {
                const row = document.createElement('tr');
                row.className = 'transaction-row';
                row.innerHTML = `
                            <td class="py-3 px-4">
                                <span class="badge transaction-type-badge bg-${transaction.type === 'Income' ? 'success' : 'danger'}">
                                    <i class="fas fa-${transaction.type === 'Income' ? 'arrow-up' : 'arrow-down'} me-1"></i>
                                    ${transaction.type === 'Income' ? 'Thu nhập' : 'Chi tiêu'}
                                </span>
                            </td>
                            <td class="py-3 px-4">
                                <span class="transaction-amount ${transaction.type === 'Income' ? 'text-success' : 'text-danger'}">
                                    ${transaction.type === 'Income' ? '+' : '-'}${formatCurrency(transaction.amount)}
                                </span>
                            </td>
                            <td class="py-3 px-4">
                                <span class="badge bg-light text-dark">
                                    <i class="fas fa-folder me-1"></i>${transaction.category}
                                </span>
                            </td>
                            <td class="py-3 px-4">
                                <small class="text-muted">${formatDate(transaction.date)}</small>
                            </td>
                            <td class="py-3 px-4">
                                <span class="text-truncate d-inline-block" style="max-width: 150px;" title="${transaction.note || ''}">
                                    ${transaction.note || '-'}
                                </span>
                            </td>
                        `;
                tbody.appendChild(row);
            });
        }

        async function loadAISuggestions() {
            const suggestions = dashboardData.aiSuggestions || [];
            const container = document.getElementById('aiSuggestionsList');
            container.innerHTML = '';

            if (suggestions.length === 0) {
                container.innerHTML = `
                            <div class="text-center py-4 text-muted">
                                <i class="fas fa-robot fa-3x mb-3 text-warning"></i>
                                <div class="mb-2">Chưa có gợi ý nào</div>
                                <small>Nhấn nút <i class="fas fa-magic"></i> để tạo gợi ý mới</small>
                            </div>
                        `;
                return;
            }

            suggestions.forEach((suggestion, index) => {
                const suggestionDiv = document.createElement('div');
                suggestionDiv.className = 'ai-suggestion mb-3';
                suggestionDiv.innerHTML = `
                            <div class="d-flex align-items-start">
                                <div class="flex-shrink-0 me-3">
                                    <div class="bg-warning bg-opacity-20 rounded-circle p-2">
                                        <i class="fas fa-lightbulb text-warning"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1">
                                    <p class="mb-2 small">${suggestion.suggestion}</p>
                                    <small class="text-muted">
                                        <i class="fas fa-clock me-1"></i>${formatDate(suggestion.createdAt)}
                                    </small>
                                </div>
                            </div>
                        `;
                container.appendChild(suggestionDiv);
            });
        }

        async function loadCategories() {
            try {
                const response = await fetch('/api/categories', {
                    headers: {
                        'Authorization': 'Bearer ' + getToken()
                    }
                });

                if (response.ok) {
                    const categories = await response.json();
                    const expenseSelect = document.getElementById('expenseCategory');
                    const incomeSelect = document.getElementById('incomeCategory');

                    expenseSelect.innerHTML = '<option value="">Chọn danh mục</option>';
                    incomeSelect.innerHTML = '<option value="">Chọn danh mục</option>';

                    categories.forEach(category => {
                        const option1 = new Option(category.name, category.id);
                        const option2 = new Option(category.name, category.id);
                        expenseSelect.add(option1);
                        incomeSelect.add(option2);
                    });
                }
            } catch (error) {
                console.error('Error loading categories:', error);
            }
        }

        function setDefaultDates() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('expenseDate').value = today;
            document.getElementById('incomeDate').value = today;
        }

        function showAddTransactionModal() {
            const modal = new bootstrap.Modal(document.getElementById('addTransactionModal'));
            modal.show();
        }

        function showAddExpenseModal() {
            showAddTransactionModal();
            document.getElementById('expense-tab').click();
        }

        function showAddIncomeModal() {
            showAddTransactionModal();
            document.getElementById('income-tab').click();
        }

        async function saveTransaction() {
            const activeTab = document.querySelector('#transactionTabs .nav-link.active');
            const isExpense = activeTab.id === 'expense-tab';

            const form = isExpense ? document.getElementById('addExpenseForm') : document.getElementById('addIncomeForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const transactionData = {
                amount: parseFloat(isExpense ? document.getElementById('expenseAmount').value : document.getElementById('incomeAmount').value),
                categoryId: parseInt(isExpense ? document.getElementById('expenseCategory').value : document.getElementById('incomeCategory').value),
                note: isExpense ? document.getElementById('expenseNote').value : document.getElementById('incomeNote').value
            };

            if (isExpense) {
                transactionData.expenseDate = document.getElementById('expenseDate').value;
            } else {
                transactionData.incomeDate = document.getElementById('incomeDate').value;
            }

            try {
                const endpoint = isExpense ? '/api/expenses' : '/api/incomes';
                const response = await fetch(endpoint, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + getToken()
                    },
                    body: JSON.stringify(transactionData)
                });

                if (response.ok) {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addTransactionModal'));
                    modal.hide();
                    form.reset();
                    setDefaultDates();
                    loadDashboardData();
                } else {
                    alert('Có lỗi xảy ra khi lưu giao dịch');
                }
            } catch (error) {
                console.error('Error saving transaction:', error);
                alert('Có lỗi xảy ra khi lưu giao dịch');
            }
        }

        async function generateAISuggestion() {
            try {
                const response = await fetch('/api/dashboard/generate-ai-suggestion', {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + getToken()
                    }
                });

                if (response.ok) {
                    loadDashboardData();
                } else {
                    alert('Có lỗi xảy ra khi tạo gợi ý AI');
                }
            } catch (error) {
                console.error('Error generating AI suggestion:', error);
                alert('Có lỗi xảy ra khi tạo gợi ý AI');
            }
        }

        function refreshDashboard() {
            loadDashboardData();
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(amount);
        }

        function formatDate(dateString) {
            return new Date(dateString).toLocaleDateString('vi-VN');
        }

        function getToken() {
            return localStorage.getItem('authToken') || '';
        }

        function exportChart(chartType) {
            // TODO: Implement chart export functionality
            alert(`Chức năng xuất biểu đồ ${chartType} sẽ được cập nhật`);
        }

        function refreshChart(chartType) {
            if (chartType === 'pie') {
                if (expensesPieChart) {
                    expensesPieChart.destroy();
                }
                createCharts();
            } else if (chartType === 'line') {
                if (monthlyTrendsChart) {
                    monthlyTrendsChart.destroy();
                }
                createCharts();
            }
        }

        // Add loading animation
        function showLoading(elementId) {
            const element = document.getElementById(elementId);
            if (element) {
                element.innerHTML = `
                            <div class="text-center py-4">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Đang tải...</span>
                                </div>
                                <div class="mt-2 text-muted">Đang tải dữ liệu...</div>
                            </div>
                        `;
            }
        }

        // Add fade-in animation to cards
        function animateCards() {
            const cards = document.querySelectorAll('.dashboard-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    card.style.transition = 'all 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        }

        // Initialize dashboard with animation
        $(document).ready(function () {
            // Check authentication first
            const token = localStorage.getItem('authToken');
            if (!token) {
                window.location.href = '/Login';
                return;
            }

            // Load user info
            loadUserInfo();

            loadDashboardData().then(() => {
                animateCards();
            });
            loadCategories();
            setDefaultDates();
        });

        function loadUserInfo() {
            const user = JSON.parse(localStorage.getItem('user') || '{}');

            // Update greeting
            const firstName = user.fullName ? user.fullName.split(' ')[0] : (user.username || 'bạn');
            $('#userGreeting').text(firstName);

            // Update avatar
            if (user.pictureUrl) {
                $('#userAvatar').attr('src', user.pictureUrl).show();
                $('#userAvatarPlaceholder').hide();
            } else {
                const initial = firstName.charAt(0).toUpperCase();
                $('#userAvatarPlaceholder').text(initial);
            }
        }
    </script>
}
